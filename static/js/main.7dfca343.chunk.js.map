{"version":3,"sources":["components/ResetScreen.jsx","components/StartScreen.jsx","components/Button.jsx","components/Container.jsx","components/Board.jsx","components/MainFrame.jsx","App.js","serviceWorker.js","index.js"],"names":["ResetScreen","_ref","moveCount","onClick","animateOut","react_default","a","createElement","lib","animationIn","animationInDuration","className","concat","StartScreen","visibility","onChange","boardSize","style","isVisible","type","name","checked","value","Button","isHidden","icon","isClickable","index","Fragment","pointerEvents","Container","animalArray","grid","map","i","key","components_Button","renderButton","choiceArray","Board","_useState","useState","_useState2","Object","slicedToArray","setBoardSize","_useState3","Array","parseInt","fill","_useState4","setIsHidden","_useState5","_useState6","pairsFound","setPairsFound","_useState7","_useState8","setIsClickable","_useState9","_useState10","setMoveCount","_useState11","_useState12","gameStarted","setGameStarted","shuffle","array","length","j","Math","floor","random","useEffect","console","log","splice","components_StartScreen","e","target","components_Container","columnGap","hidden","hiddenIndex","push","setTimeout","components_ResetScreen","MainFrame","components_Board","App","components_MainFrame","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7dfca343.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Animated } from 'react-animated-css';\r\nconst ResetScreen = ({ moveCount, onClick, animateOut }) => {\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationInDuration={3000}>\r\n      <div className=\"reset-screen\">\r\n        <div className=\"reset-screen-text\">{`You win!\r\nYou have beaten the game in ${moveCount} moves.`}</div>\r\n        <button className=\"btn btn-primary play-again-button\" onClick={onClick}>\r\n          {'Play again'}\r\n        </button>\r\n      </div>\r\n    </Animated>\r\n  );\r\n};\r\n\r\nexport default ResetScreen;\r\n","import React from 'react';\r\nimport { Animated } from 'react-animated-css';\r\nconst StartScreen = ({ visibility, onClick, onChange, boardSize }) => {\r\n  return (\r\n    <div className=\"start-screen\" style={{ visibility: visibility }}>\r\n      <Animated animationIn=\"zoomIn\" animationInDuration={1000} isVisible={true}>\r\n        <button className=\"start-button btn btn-primary\" onClick={onClick}>\r\n          {'Start Game'}\r\n        </button>\r\n      </Animated>\r\n      <form className=\"board-size-form\">\r\n        <div className=\"board-size-text\">{'Board size'}</div>\r\n        <div className=\"pretty p-default p-curve\">\r\n          <input type=\"radio\" name=\"board-size\" checked={boardSize === '12'} value={'12'} onChange={onChange} />\r\n          <div className=\"state p-primary-o\">\r\n            <i className=\"icon mdi mdi-check\" />\r\n            <label>3x4</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"pretty p-default p-curve\">\r\n          <input type=\"radio\" name=\"board-size\" checked={boardSize === '16'} value={'16'} onChange={onChange} />\r\n          <div className=\"state p-primary-o\">\r\n            <i className=\"icon mdi mdi-check\" />\r\n            <label>4x4</label>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartScreen;\r\n","import React from 'react';\r\n// import { Animated } from \"react-animated-css\";\r\nconst Button = ({ isHidden, icon, onClick, isClickable, index }) => {\r\n  return (\r\n    <>\r\n      {isHidden ? (\r\n        <button className=\"tile\" onClick={() => onClick(index)} style={{ pointerEvents: isClickable }} />\r\n      ) : (\r\n        <button className=\"tile\" onClick={onClick} style={{ pointerEvents: 'none' }}>\r\n          <i className={icon} />\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nconst Container = ({ animalArray, isHidden, isClickable, onClick, grid }) => {\r\n  const renderButton = index => {\r\n    return (\r\n      <Button\r\n        icon={animalArray[index]}\r\n        isHidden={isHidden[index]}\r\n        onClick={onClick}\r\n        isClickable={isClickable}\r\n        index={index}\r\n      />\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <div className=\"container\" style={grid}>\r\n      {animalArray.map((i, index) => (\r\n        <div className=\"tile\" key={index}>\r\n          {renderButton(index)}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ResetScreen from \"./ResetScreen\";\r\nimport StartScreen from \"./StartScreen\";\r\nimport Container from \"./Container\";\r\n// import animalArray from \"./Icons.jsx\"\r\n\r\nvar animalArray = [\r\n  \"fas fa-cat\",\r\n  \"fas fa-dog\",\r\n  \"fas fa-frog\",\r\n  \"fas fa-crow\",\r\n  \"fas fa-hippo\",\r\n  \"fas fa-horse\",\r\n  \"fas fa-dove\",\r\n  \"fas fa-fish\",\r\n  \"fas fa-dragon\",\r\n  \"fas fa-spider\",\r\n  \"fas fa-kiwi-bird\"\r\n];\r\n\r\nvar choiceArray = [];\r\nconst Board = () => {\r\n  const [boardSize, setBoardSize] = useState(\"12\");\r\n  const [isHidden, setIsHidden] = useState(\r\n    Array(parseInt(boardSize)).fill(true)\r\n  );\r\n  const [pairsFound, setPairsFound] = useState(0);\r\n  const [isClickable, setIsClickable] = useState(\"visible\");\r\n  const [moveCount, setMoveCount] = useState(0);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const shuffle = array => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (gameStarted === true) {\r\n      console.log(\"dupa\");\r\n      shuffle(animalArray);\r\n      animalArray.splice(0, animalArray.length - parseInt(boardSize) / 2);\r\n      animalArray = animalArray.concat(animalArray);\r\n      shuffle(animalArray);\r\n      setIsHidden(Array(parseInt(boardSize)).fill(true));\r\n    }\r\n  }, [gameStarted, boardSize]);\r\n\r\n  const handleClick = index => {\r\n    setIsHidden(\r\n      isHidden.map((hidden, hiddenIndex) =>\r\n        index === hiddenIndex ? !hidden : hidden\r\n      )\r\n    );\r\n    setMoveCount(moveCount + 1);\r\n    choiceArray.push(index);\r\n    if (choiceArray.length === 2) {\r\n      if (animalArray[choiceArray[0]] === animalArray[choiceArray[1]]) {\r\n        choiceArray = [];\r\n        setPairsFound(pairsFound + 1);\r\n      } else {\r\n        setIsClickable(\"none\");\r\n        setTimeout(() => {\r\n          setIsClickable(\"\");\r\n          setIsHidden(\r\n            isHidden.map((hidden, hiddenIndex) =>\r\n              hiddenIndex === choiceArray[0] ? !hidden : hidden\r\n            )\r\n          );\r\n          choiceArray = [];\r\n        }, 1500);\r\n      }\r\n    }\r\n  };\r\n\r\n  const newGame = () => {\r\n    shuffle(animalArray);\r\n    setIsHidden(Array(parseInt(boardSize)).fill(true));\r\n    setPairsFound(0);\r\n    setMoveCount(0);\r\n  };\r\n  const handleChange = e => {\r\n    setBoardSize(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"board\">\r\n      {gameStarted === false && (\r\n        <StartScreen\r\n          onClick={() => setGameStarted(true)}\r\n          onChange={handleChange}\r\n          boardSize={boardSize}\r\n        />\r\n      )}\r\n      {pairsFound < parseInt(boardSize) / 2 && gameStarted === true && (\r\n        <Container\r\n          grid={\r\n            boardSize === \"12\"\r\n              ? { grid: \"repeat(4, 1fr) / repeat(3, 1fr)\" }\r\n              : {\r\n                  grid: \"repeat(4, 1fr) / repeat(4, 1fr)\",\r\n                  columnGap: \"calc(0.5rem + 0.5vw)\"\r\n                }\r\n          }\r\n          animalArray={animalArray}\r\n          isHidden={isHidden}\r\n          isClickable={isClickable}\r\n          onClick={handleClick}\r\n        />\r\n      )}\r\n      {pairsFound === parseInt(boardSize) / 2 && (\r\n        <ResetScreen onClick={newGame} moveCount={moveCount} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport Board from \"./Board\";\r\n\r\nconst MainFrame = () => {\r\n  return (\r\n    <div className=\"main-frame\">\r\n      <h1 className=\"game-title\">Memory Game</h1>\r\n        <Board />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainFrame;\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport MainFrame from './components/MainFrame';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MainFrame />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport 'pretty-checkbox/src/pretty-checkbox.scss';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}